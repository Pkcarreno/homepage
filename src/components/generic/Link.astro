---
import path from 'node:path'

import type { HTMLAttributes } from 'astro/types'

type Props = HTMLAttributes<'a'> & {
  unstyled?: boolean
}

const { href, class: className, ...props } = Astro.props

const { pathname } = Astro.url

const dir = typeof href === 'string' ? href : href ? href.toString() : ''

const isExternal = URL.canParse(dir)
const isHash = dir.startsWith('#')
const isMail = dir.startsWith('mailto:')
const isTel = dir.startsWith('tel:')
const isInternal = !isExternal && !isHash && !isMail && !isTel
const isActive =
  isInternal &&
  (dir === pathname ||
    dir === `${pathname}/` ||
    `${dir}/` === pathname ||
    dir === '.' ||
    dir === './')

let contact: string | undefined = undefined
if (isMail) {
  contact = dir.replace('mailto:', '')
} else if (isTel) {
  contact = dir.replace('tel:', '')
}

let parsedUrl = dir
if (isExternal === false && isHash === false) {
  const basePrefix = import.meta.env.BASE_URL

  parsedUrl = path.isAbsolute(dir)
    ? `${path.join(basePrefix ?? '/', dir)}`
    : dir
}

let dataContact: string | null = null
if (contact) {
  parsedUrl = '#'
  dataContact = btoa(dir)
}

const uniqueId = dataContact
  ? `link-${Math.random().toString(16).slice(2)}`
  : undefined
---

<>
  <!-- prettier-ignore -->
  <a
    href={parsedUrl}
    class:list={[
      props.unstyled !== true && {
        link: true,
        'is-external': isExternal,
        'is-internal': isInternal,
        'is-hash': isHash,
        'is-mail': isMail,
        'is-tel': isTel,
        'is-active': isActive
      },
      className,
      props['class:list']
    ]}
    unique-id={uniqueId}
    data-contact={dataContact}
    target={isExternal ? '_blank' : null}
    rel={isExternal
      ? 'noopener nofollow'
      : isInternal && !isActive
        ? 'prefetch'
        : null}
    {...props}><slot /></a>
</>

<script>
  const contactLinks = document.querySelectorAll('.link[unique-id]')

  contactLinks.forEach(link => {
    link.addEventListener('click', e => {
      e.preventDefault()

      const contactHrefRaw = link.getAttribute('data-contact')
      if (contactHrefRaw) {
        const contactHref = atob(contactHrefRaw)
        window.location.href = contactHref
      }
    })
  })
</script>
