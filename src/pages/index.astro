---
import { type CollectionEntry, getCollection } from 'astro:content'

import Link from '@/components/ui/Link.astro'
import Layout from '@/layouts/Layout.astro'

const writeEntries = await getCollection('escritos')

type entryType = CollectionEntry<'escritos'>
---

<Layout
  title="Intro"
  description="Blog de Pedro Carreño, donde se comparte contenido sobre desarrollo, software libre y privacidad. Además, están expuestos algunos proyectos destacados."
  seoTitle="Pedro Carreño"
  withoutTitleTemplate
>
  <h1>Pedro Carreño</h1>

  <p>Bienvenido a mi sitio.</p>

  <p>
    Este es mi pequeño jardín de experimentación. Iré subiendo algunos <Link
      href="/escritos">escritos</Link
    >
    de lo que se me cruce por la cabeza en temas relacionados con tecnología, programación
    y privacidad cada tanto. Además de ir expandiendo el sitio con varias ideas que
    tengo en mente.
  </p>

  <p>
    Todavía es un proyecto en construcción. Puedes subscribirte al <Link
      href="/rss">feed RSS</Link
    > para estar al tanto con cualquier novedad.
  </p>

  <br />

  <h2>Mis últimos escritos</h2>
  <div class="flex flex-col gap-4">
    {
      writeEntries
        .filter(
          (entry: entryType) =>
            process.env.NODE_ENV === 'development' || !entry.data.draft
        )
        .sort(
          (entryA: entryType, entryB: entryType) =>
            new Date(entryB.data.date).getTime() -
            new Date(entryA.data.date).getTime()
        )
        .splice(0, 5)
        .map((entry: entryType) => (
          <div class="space-x-5">
            <small class="text-muted-foreground text-xs">
              {entry.data.date instanceof Date
                ? entry.data.date.toLocaleDateString()
                : entry.data.date}
            </small>
            <Link
              href={`/escritos/${entry.slug}`}
            >{`${entry.data.title}${entry.data.draft ? ' - DRAFT' : ''}`}</Link>
          </div>
        ))
    }
    <Link class="w-fit" href="/escritos">Ver todos</Link>
  </div>
</Layout>
